{
  "_id": "ObjectId",
  "productId": "event_tickets: eventTicketId",
  "functionId": "functions: functionId",
  "eventId": "event_tickets: eventId",
  
  "sku": "TODO: Generate from eventTicketId or product code",
  "name": "event_tickets: name",
  "description": "event_tickets: description",
  "type": "TODO: Map from product context - ticket for event_tickets",
  "category": "TODO: Determine category based on product type",
  
  "price": {
    "amount": "event_tickets: price",
    "currency": "TODO: Default to AUD",
    "taxRate": "TODO: Default to 0.10 for GST",
    "taxIncluded": "TODO: Determine from price structure",
    "cost": "TODO: Cost price if available"
  },
  
  "inventory": {
    "method": "TODO: Default to allocated for tickets",
    "totalCapacity": "event_tickets: totalCapacity",
    "soldCount": "event_tickets: soldCount",
    "reservedCount": "event_tickets: reservedCount",
    "availableCount": "event_tickets: availableCount",
    "lastUpdated": "event_tickets: updatedAt",
    "version": "TODO: Initialize to 1"
  },
  
  "attributes": {
    "sessionInfo": {
      "date": "events: eventStart",
      "duration": "TODO: Calculate from eventStart and eventEnd",
      "venue": "locations: name",
      "room": "TODO: Room or area within venue"
    },
    "shipping": "TODO: Only for physical merchandise",
    "digital": "TODO: Only for digital products"
  },
  
  "eligibility": {
    "rules": "event_tickets: eligibilityCriteria.rules",
    "operator": "event_tickets: eligibilityCriteria.operator"
  },
  
  "restrictions": {
    "minPerOrder": "TODO: Default to 1",
    "maxPerOrder": "TODO: Default based on product type",
    "maxPerAttendee": "TODO: Set limits per attendee",
    "startDate": "functions: dates.onSaleDate",
    "endDate": "functions: dates.closedDate",
    "memberOnly": "TODO: Determine from eligibility rules"
  },
  
  "display": {
    "order": "TODO: Set display order",
    "featured": "events: featured",
    "hidden": "TODO: Inverse of events.isPublished",
    "imageUrl": "events: imageUrl",
    "thumbnailUrl": "TODO: Generate or use smaller image",
    "badges": "TODO: Determine badges like limited, bestseller"
  },
  
  "external": {
    "stripeProductId": "events: stripeProductId",
    "stripePriceId": "event_tickets: stripePriceId",
    "squareCatalogId": "event_tickets: catalogObjectId",
    "xeroItemCode": "TODO: Xero integration code"
  },
  
  "status": "event_tickets: status",
  "statusReason": "TODO: Reason for status change",
  
  "metadata": {
    "tags": "TODO: Extract from event type and function tags",
    "customFields": "TODO: Any custom fields needed",
    "source": "TODO: Import source - migration",
    "importId": "event_tickets: _id"
  },
  
  "createdAt": "event_tickets: createdAt",
  "updatedAt": "event_tickets: updatedAt",
  "createdBy": "TODO: System or user who created",
  "updatedBy": "TODO: System or user who updated"
}