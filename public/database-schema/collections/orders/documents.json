{
  "_id": "ObjectId",
  "orderNumber": "TODO: Sequential order number generation",
  "orderType": "registrations: registrationType mapping to order type",
  "catalogObjectId": "functions: functionId",
  "status": "registrations: registrationStatus mapping",
  
  "customer": {
    "type": "registrations: purchaser.type",
    "contactId": "registrations: purchaser.contactId",
    "organisationId": "registrations: purchaser.organisationId", 
    "rawData": {
      "name": "registrations: purchaser.name",
      "email": "registrations: purchaser.email",
      "phone": "registrations: purchaser.phone"
    }
  },
  
  "lineItems": {
    "_id": "TODO: Generate line item ID",
    "productId": "events: eventId mapping to product UUID",
    "productName": "events: title",
    "variationId": "eventTickets: ticketId mapping to variation UUID",
    "variationName": "eventTickets: name",
    "quantity": "registrations: attendees count per ticket type",
    "unitPrice": "eventTickets: price",
    "totalPrice": "TODO: Calculate from quantity * unitPrice",
    
    "owner": {
      "type": "attendees: mapping based on assignment",
      "contactId": "attendees: attendeeId",
      "organisationId": "registrations: purchaser.organisationId if unassigned",
      "rawAttendee": {
        "firstName": "attendees: firstName",
        "lastName": "attendees: lastName", 
        "email": "attendees: email",
        "phone": "attendees: phone",
        "dietaryRequirements": "attendees: dietaryRequirements",
        "specialNeeds": "attendees: specialNeeds"
      }
    },
    
    "fulfillment": {
      "status": "TODO: Set based on ticket creation",
      "ticketId": "tickets: _id after creation",
      "fulfilledAt": "TODO: Timestamp when ticket created"
    }
  },
  
  "totals": {
    "subtotal": "registrations: registration.totals.subtotal",
    "discount": "registrations: registration.totals.discount",
    "tax": "registrations: registration.totals.tax",
    "fees": "registrations: registration.totals.fees",
    "total": "registrations: registration.totals.total",
    "paid": "registrations: registration.payment.totalPaid",
    "balance": "registrations: registration.payment.balance",
    "currency": "TODO: Default to AUD"
  },
  
  "payment": {
    "status": "registrations: registration.payment.status",
    "transactions": "financialTransactions: matching registration"
  },
  
  "billing": {
    "contact": {
      "name": "registrations: billing.contact.name",
      "email": "registrations: billing.contact.email",
      "phone": "registrations: billing.contact.phone"
    },
    "address": {
      "addressLine1": "registrations: billing.address.addressLine1",
      "addressLine2": "registrations: billing.address.addressLine2",
      "city": "registrations: billing.address.city",
      "state": "registrations: billing.address.state",
      "postcode": "registrations: billing.address.postcode",
      "country": "registrations: billing.address.country"
    },
    "abn": "registrations: billing.abn",
    "organisationName": "registrations: billing.organisationName"
  },
  
  "notes": "registrations: registration.notes",
  
  "metadata": {
    "source": {
      "channel": "registrations: registration.source",
      "device": "TODO: Extract from source if available",
      "ipAddress": "TODO: Extract from source if available"
    },
    "createdAt": "registrations: metadata.createdAt",
    "createdBy": "registrations: metadata.createdBy",
    "updatedAt": "registrations: metadata.updatedAt",
    "updatedBy": "registrations: metadata.updatedBy"
  }
}